{"version":3,"mappings":"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","names":["slider","viewport","track","items","btnPrev","btnNext","slidesPerView","gap","slideWidth","index","maxIndex","isDown","startX","currentX","startTX","autoplayTimer","AUTOPLAY_MS","getSlidesPerView","w","getGapFromCSS","g","num","layout","li","applyTransform","updateButtons","offset","getCurrentTranslateX","el","tr","stopAutoplay","startAutoplay","pointerDown","x","pointerMove","dx","pointerUp","threshold"],"ignoreList":[],"sources":["../src/js/carousel-settings.js","../src/main.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\n  (function () {\n    const slider = document.querySelector('.reviews-slider');\n    if (!slider) return;\n\n    const viewport = slider.querySelector('.viewport');\n    const track = slider.querySelector('.review-track');\n    const items = Array.from(track.children);\n    const btnPrev = slider.querySelector('.nav-btn.prev');\n    const btnNext = slider.querySelector('.nav-btn.next');\n\n    let slidesPerView = 1;\n    let gap = 32;\n    let slideWidth = 0;\n    let index = 0;\n    let maxIndex = 0;\n\n    let isDown = false;\n    let startX = 0;\n    let currentX = 0;\n    let startTX = 0;\n\n    let autoplayTimer = null;\n    const AUTOPLAY_MS = 3500;\n\n    function getSlidesPerView() {\n      const w = window.innerWidth;\n      if (w >= 1280) return 3;\n      if (w >= 768) return 2;\n      return 1;\n    }\n\n    function getGapFromCSS() {\n      const g = getComputedStyle(track).gap || '0px';\n      const num = parseFloat(g);\n      return Number.isFinite(num) ? num : 0;\n    }\n\n    function layout() {\n      slidesPerView = getSlidesPerView();\n      gap = getGapFromCSS();\n\n      const viewportWidth = viewport.clientWidth;\n      slideWidth = (viewportWidth - gap * (slidesPerView - 1)) / slidesPerView;\n\n      items.forEach(li => {\n        li.style.width = slideWidth + 'px';\n        li.style.flex = '0 0 ' + slideWidth + 'px';\n      });\n\n      maxIndex = Math.max(0, items.length - slidesPerView);\n      if (index > maxIndex) index = maxIndex;\n\n      applyTransform();\n      updateButtons();\n    }\n\n    function applyTransform() {\n      const offset = index * (slideWidth + gap);\n      track.style.transform = 'translate3d(' + -offset + 'px,0,0)';\n    }\n\n    function updateButtons() {\n      btnPrev.disabled = index <= 0;\n      btnNext.disabled = index >= maxIndex;\n    }\n\n    function getCurrentTranslateX(el) {\n      const tr = getComputedStyle(el).transform;\n      if (!tr || tr === 'none') return 0;\n      if (tr.startsWith('matrix3d(')) {\n        const v = tr.slice(9, -1).split(',').map(parseFloat);\n        return v[12] || 0;\n      }\n      if (tr.startsWith('matrix(')) {\n        const v = tr.slice(7, -1).split(',').map(parseFloat);\n        return v[4] || 0;\n      }\n      return 0;\n    }\n\n    btnPrev.addEventListener('click', () => {\n      stopAutoplay();\n      index = Math.max(0, index - 1);\n      applyTransform();\n      updateButtons();\n      startAutoplay();\n    });\n\n    btnNext.addEventListener('click', () => {\n      stopAutoplay();\n      index = Math.min(maxIndex, index + 1);\n      applyTransform();\n      updateButtons();\n      startAutoplay();\n    });\n\n    viewport.addEventListener('keydown', e => {\n      if (e.key === 'ArrowLeft') btnPrev.click();\n      if (e.key === 'ArrowRight') btnNext.click();\n    });\n\n    function pointerDown(x) {\n      isDown = true;\n      startX = currentX = x;\n      startTX = getCurrentTranslateX(track);\n      track.style.transition = 'none';\n      stopAutoplay();\n      viewport.classList.add('grabbing');\n    }\n    function pointerMove(x) {\n      if (!isDown) return;\n      currentX = x;\n      const dx = currentX - startX;\n      track.style.transform = 'translate3d(' + (startTX + dx) + 'px,0,0)';\n    }\n    function pointerUp() {\n      if (!isDown) return;\n      isDown = false;\n      viewport.classList.remove('grabbing');\n      track.style.transition = 'transform 350ms cubic-bezier(.22,.61,.36,1)';\n\n      const dx = currentX - startX;\n      const step = slideWidth + gap;\n      const threshold = step * 0.22;\n\n      if (dx < -threshold && index < maxIndex) index += 1;\n      if (dx > threshold && index > 0) index -= 1;\n\n      applyTransform();\n      updateButtons();\n      startAutoplay();\n    }\n\n    viewport.addEventListener('mousedown', e => pointerDown(e.clientX));\n    window.addEventListener('mousemove', e => pointerMove(e.clientX));\n    window.addEventListener('mouseup', pointerUp);\n    viewport.addEventListener('mouseleave', () => {\n      if (isDown) pointerUp();\n    });\n\n    viewport.addEventListener(\n      'touchstart',\n      e => pointerDown(e.touches[0].clientX),\n      { passive: true }\n    );\n    window.addEventListener(\n      'touchmove',\n      e => pointerMove(e.touches[0].clientX),\n      { passive: true }\n    );\n    window.addEventListener('touchend', pointerUp);\n\n    function startAutoplay() {\n      if (autoplayTimer) return;\n      autoplayTimer = setInterval(() => {\n        if (index < maxIndex) {\n          index += 1;\n        } else {\n          index = 0;\n        }\n        applyTransform();\n        updateButtons();\n      }, AUTOPLAY_MS);\n    }\n    function stopAutoplay() {\n      if (autoplayTimer) {\n        clearInterval(autoplayTimer);\n        autoplayTimer = null;\n      }\n    }\n\n    viewport.addEventListener('mouseenter', stopAutoplay);\n    viewport.addEventListener('focusin', stopAutoplay);\n    viewport.addEventListener('mouseleave', startAutoplay);\n    viewport.addEventListener('focusout', startAutoplay);\n\n    window.addEventListener('resize', layout);\n    window.addEventListener('orientationchange', layout);\n\n    layout();\n    startAutoplay();\n  })();\n});\n","import('./js/mobile-menu');\nimport './js/carousel-settings.js';\n"],"file":"index.js"}